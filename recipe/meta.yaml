{% set version = "3.14.4" %}
{% set major_minor = '.'.join(version.split(".")[:2]) %}

package:
  name: cmake
  version: {{ version.replace('-', '_') }}

source:
  - url: https://cmake.org/files/v{{ major_minor }}/cmake-{{ version }}.tar.gz
    sha256: 00b4dc9b0066079d10f16eed32ec592963a44e7967371d2f5077fd1670ff36d9
    folder: cmake
    patches:
      - 0001-librhash-requires-libdl-for-dlopen.patch
      - 0002-Add-debug-logging-to-cmFindCommon.3.14.2.patch
      - 0003-Apple-Clang.cmake-does-not-want-lib32-lib64-nor-libx.patch
      - 0004-Default-to-NO_SYSTEM_ENVIRONMENT_PATH-when-CMAKE_CRO.patch
  # - path: /opt/src/cmake
  #   path_via_symlink: True
  #   folder: cmake

    # Note, on Windows, we *do* build from source, but not fully. We use CMake's own CMakeLists.txt
    # There is not really any good reason to do it this way but it is what it is.
  - url: https://cmake.org/files/v{{ major_minor }}/cmake-{{ version }}-win32-x86.zip       # [win32]
    sha256: 31efdf788f0129d5cd65e3bcb1e3b1202ad31c2b4cfde4168d24282ae4153d3e                # [win32]
    folder: official-binary                                                                 # [win32]

  - url: https://cmake.org/files/v{{ major_minor }}/cmake-{{ version }}-win64-x64.zip       # [win64]
    sha256: 6d334ca9b42c3e125889d562cfdb9c43a429b5ab329d33a7ab6e14e559aa7822                # [win64]
    folder: official-binary                                                                 # [win64]

build:
  number: 0
  skip: True  # [win and vc<14]
  ignore_run_exports:
    - rhash
    - libgfortran            # [osx]
    - libgfortran-ng         # [linux]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('fortran') }}
    - make                   # [unix]
    - openjdk
  host:
    - bzip2                  # [unix]
    - xz                     # [unix]
    - zlib                   # [unix]
    - expat                  # [unix]
    - libcurl                # [unix]
    - libarchive
    - ncurses                # [osx]
    # May be good to do this, but really build tools are too critical to risk any DSO incompat.
    # Remember to change to -DCMAKE_USE_SYSTEM_LIBRARY_LIBUV=YES in build.sh if you depend on libuv
    # - libuv                  # [unix]
    - rhash                  # [unix]

test:
  files:
    - SSLTest.cmake
  commands:
    - cmake --version
    - cmake -V -P SSLTest.cmake
    - ctest --version
    - cpack --version

about:
  home: http://www.cmake.org/
  license: BSD 3-clause
  license_family: BSD
  summary: CMake is an extensible, open-source system that manages the build process
  description: |
    CMake is an open-source, cross-platform family of tools designed to build,
    test and package software.
  dev_url: https://gitlab.kitware.com/cmake/cmake/
  doc_url: https://cmake.org/documentation/
  doc_source_url: https://github.com/Kitware/CMake/blob/master/README.rst

extra:
  recipe-maintainers:
    - blowekamp
    - groutr
    - jakirkham
    - jschueller
    - ocefpaf
    - mingwandroid
    - msarahan
    - scopatz
    - tadeu
